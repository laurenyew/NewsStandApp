apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "laurenyew.newsstandapp"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    //Allow Unit tests to see resources
    //(used for fragment tests)
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        project.ext["lintIgnore"].each { disable it }
        abortOnError false
        checkReleaseBuilds true
    }
}

dependencies {
    //Android Support Version
    //noinspection GradleCompatible
    implementation "com.android.support:design:$androidSupportVersion"
    implementation "com.android.support:support-v4:$androidSupportVersion"
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:recyclerview-v7:$androidSupportVersion"

    //Networking
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion") {
        exclude module: 'okhttp'
    }
    implementation "com.squareup.okhttp3:okhttp:$okhttp3Version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttp3Version"
    //Retrofit no longer comes with default logging
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"

    //Parsing Json Data
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    //Third Party
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    //Test
    testImplementation "junit:junit:$junitVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.robolectric:shadows-support-v4:$robolectricShadowsVersion"

    androidTestImplementation "com.android.support.test:runner:$supportTestRunnerVersion"
    androidTestImplementation "com.android.support.test:rules:$supportTestRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
}
